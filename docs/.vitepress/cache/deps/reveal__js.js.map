{
  "version": 3,
  "sources": ["../../../../node_modules/reveal.js/js/utils/util.js", "../../../../node_modules/reveal.js/js/utils/device.js", "../../../../node_modules/reveal.js/node_modules/fitty/dist/fitty.module.js", "../../../../node_modules/reveal.js/js/controllers/slidecontent.js", "../../../../node_modules/reveal.js/js/controllers/slidenumber.js", "../../../../node_modules/reveal.js/js/utils/color.js", "../../../../node_modules/reveal.js/js/controllers/backgrounds.js", "../../../../node_modules/reveal.js/js/utils/constants.js", "../../../../node_modules/reveal.js/js/controllers/autoanimate.js", "../../../../node_modules/reveal.js/js/controllers/fragments.js", "../../../../node_modules/reveal.js/js/controllers/overview.js", "../../../../node_modules/reveal.js/js/controllers/keyboard.js", "../../../../node_modules/reveal.js/js/controllers/location.js", "../../../../node_modules/reveal.js/js/controllers/controls.js", "../../../../node_modules/reveal.js/js/controllers/progress.js", "../../../../node_modules/reveal.js/js/controllers/pointer.js", "../../../../node_modules/reveal.js/js/utils/loader.js", "../../../../node_modules/reveal.js/js/controllers/plugins.js", "../../../../node_modules/reveal.js/js/controllers/print.js", "../../../../node_modules/reveal.js/js/controllers/touch.js", "../../../../node_modules/reveal.js/js/controllers/focus.js", "../../../../node_modules/reveal.js/js/controllers/notes.js", "../../../../node_modules/reveal.js/js/components/playback.js", "../../../../node_modules/reveal.js/js/config.js", "../../../../node_modules/reveal.js/js/reveal.js", "../../../../node_modules/reveal.js/js/index.js"],
  "sourcesContent": ["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}", "const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );", "/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);", "import { extend, queryAll, closest, getMimeTypeFromFile } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n", "/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}", "import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n", "\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;", "import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Eplicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considerd\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n", "import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}", "import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}", "import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}", "/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( element ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not avaialble.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}", "import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}", "/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}", "/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}", "import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registed plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all regisered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n", "import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n", "import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}", "import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}", "/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}", "/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}", "import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.4.0';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before hte slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tfragments.sortAll();\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given contaienr.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given contaienr.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// availalbe if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n", "import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],
  "mappings": "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",
  "names": ["extend", "a", "b", "i", "queryAll", "el", "selector", "Array", "from", "querySelectorAll", "toggleClass", "className", "value", "classList", "add", "remove", "deserialize", "match", "parseFloat", "transformElement", "element", "transform", "style", "matches", "target", "matchesMethod", "matchesSelector", "msMatchesSelector", "call", "closest", "parentNode", "createSingletonNode", "container", "tagname", "classname", "innerHTML", "nodes", "length", "testNode", "node", "document", "createElement", "appendChild", "createStyleSheet", "tag", "type", "styleSheet", "cssText", "createTextNode", "head", "getQueryHash", "query", "location", "search", "replace", "split", "shift", "pop", "unescape", "getRemainingHeight", "height", "newHeight", "oldHeight", "offsetHeight", "removeProperty", "fileExtensionToMimeMap", "UA", "navigator", "userAgent", "isMobile", "test", "platform", "maxTouchPoints", "isAndroid", "Object", "defineProperty", "fitty_module", "_extends", "assign", "arguments", "source", "key", "prototype", "hasOwnProperty", "w", "toArray", "nl", "slice", "DrawState", "fitties", "redrawFrame", "requestRedraw", "cancelAnimationFrame", "requestAnimationFrame", "redraw", "filter", "f", "dirty", "active", "redrawAll", "forEach", "styleComputed", "computeStyle", "shouldPreStyle", "applyStyle", "fittiesToRedraw", "shouldRedraw", "calculateStyles", "markAsClean", "dispatchFitEvent", "availableWidth", "clientWidth", "currentWidth", "scrollWidth", "previousFontSize", "currentFontSize", "Math", "min", "max", "minSize", "maxSize", "whiteSpace", "multiLine", "getComputedStyle", "getPropertyValue", "display", "preStyle", "preStyleTestCompleted", "fontSize", "dispatchEvent", "CustomEvent", "detail", "oldValue", "newValue", "scaleFactor", "fit", "destroy", "_", "observeMutations", "observer", "disconnect", "originalStyle", "subscribe", "unsubscribe", "MutationObserver", "observe", "defaultOptions", "subtree", "childList", "characterData", "resizeDebounce", "onWindowResized", "clearTimeout", "setTimeout", "fitty", "observeWindowDelay", "events", "set", "enabled", "method", "e", "observeWindow", "fitAll", "fittyCreate", "elements", "options", "fittyOptions", "publicFitties", "map", "newbie", "push", "unfreeze", "freeze", "window", "SlideContent", "constructor", "Reveal", "startEmbeddedIframe", "this", "bind", "shouldPreload", "preload", "getConfig", "preloadIframes", "hasAttribute", "load", "slide", "tagName", "setAttribute", "getAttribute", "removeAttribute", "media", "sources", "background", "slideBackgroundElement", "backgroundContent", "slideBackgroundContentElement", "backgroundIframe", "backgroundImage", "backgroundVideo", "backgroundVideoLoop", "backgroundVideoMuted", "trim", "encodeURI", "join", "isSpeakerNotes", "video", "muted", "filename", "excludeIframes", "iframe", "width", "maxHeight", "maxWidth", "backgroundIframeElement", "querySelector", "layout", "scopeElement", "unload", "getSlideBackground", "formatEmbeddedContent", "_appendParamToIframeSource", "sourceAttribute", "sourceURL", "param", "getSlidesElement", "src", "indexOf", "startEmbeddedContent", "autoplay", "autoPlayMedia", "play", "readyState", "startEmbeddedMedia", "promise", "catch", "controls", "addEventListener", "removeEventListener", "event", "isAttachedToDOM", "isVisible", "currentTime", "contentWindow", "postMessage", "stopEmbeddedContent", "unloadIframes", "pause", "SlideNumber", "render", "getRevealElement", "configure", "config", "oldConfig", "slideNumberDisplay", "slideNumber", "isPrintingPDF", "showSlideNumber", "update", "getSlideNumber", "getCurrentSlide", "format", "getHorizontalSlides", "horizontalOffset", "dataset", "visibility", "getSlidePastCount", "getTotalSlides", "indices", "getIndices", "h", "sep", "isVerticalSlide", "v", "url", "getHash", "formatNumber", "delimiter", "isNaN", "colorToRgb", "color", "hex3", "r", "parseInt", "charAt", "g", "hex6", "rgb", "rgba", "Backgrounds", "create", "slideh", "backgroundStack", "createBackground", "slidev", "parallaxBackgroundImage", "backgroundSize", "parallaxBackgroundSize", "backgroundRepeat", "parallaxBackgroundRepeat", "backgroundPosition", "parallaxBackgroundPosition", "contentElement", "sync", "data", "backgroundColor", "backgroundGradient", "backgroundTransition", "backgroundOpacity", "dataPreload", "opacity", "contrastColor", "computedBackgroundStyle", "includeAll", "currentSlide", "currentBackground", "horizontalPast", "rtl", "horizontalFuture", "childNodes", "backgroundh", "backgroundv", "previousBackground", "slideContent", "currentBackgroundContent", "backgroundImageURL", "previousBackgroundHash", "currentBackgroundHash", "classToBubble", "contains", "updateParallax", "backgroundWidth", "backgroundHeight", "horizontalSlides", "verticalSlides", "getVerticalSlides", "horizontalOffsetMultiplier", "slideWidth", "offsetWidth", "horizontalSlideCount", "parallaxBackgroundHorizontal", "verticalOffsetMultiplier", "verticalOffset", "slideHeight", "verticalSlideCount", "parallaxBackgroundVertical", "POST_MESSAGE_METHOD_BLACKLIST", "FRAGMENT_STYLE_REGEX", "autoAnimateCounter", "AutoAnimate", "run", "fromSlide", "toSlide", "reset", "allSlides", "getSlides", "toSlideIndex", "fromSlideIndex", "autoAnimateStyleSheet", "animationOptions", "getAutoAnimateOptions", "autoAnimate", "slideDirection", "fromSlideIsHidden", "css", "getAutoAnimatableElements", "autoAnimateElements", "to", "autoAnimateUnmatched", "defaultUnmatchedDuration", "duration", "defaultUnmatchedDelay", "getUnmatchedAutoAnimateElements", "unmatchedElement", "unmatchedOptions", "id", "delay", "autoAnimateTarget", "fontWeight", "sheet", "removeChild", "elementOptions", "easing", "fromProps", "getAutoAnimatableProperties", "toProps", "styles", "translate", "scale", "presentationScale", "getScale", "delta", "x", "y", "scaleX", "scaleY", "round", "propertyName", "toValue", "fromValue", "explicitValue", "toStyleProperties", "keys", "inheritedOptions", "autoAnimateEasing", "autoAnimateDuration", "autoAnimatedParent", "autoAnimateDelay", "direction", "properties", "bounds", "measure", "center", "getBoundingClientRect", "offsetLeft", "offsetTop", "computedStyles", "autoAnimateStyles", "property", "pairs", "autoAnimateMatcher", "getAutoAnimatePairs", "reserved", "pair", "index", "textNodes", "findAutoAnimateMatches", "nodeName", "innerText", "textContent", "getLocalBoundingBox", "fromScope", "toScope", "serializer", "fromMatches", "toMatches", "fromElement", "pimaryIndex", "secondaryIndex", "rootElement", "children", "reduce", "result", "containsAnimatedElements", "concat", "Fragments", "fragments", "disable", "enable", "availableRoutes", "hiddenFragments", "prev", "next", "sort", "grouped", "ordered", "unordered", "sorted", "fragment", "group", "sortAll", "horizontalSlide", "verticalSlide", "changedFragments", "shown", "hidden", "maxIndex", "currentFragment", "wasVisible", "announceStatus", "getStatusText", "bubbles", "goto", "offset", "lastVisibleFragment", "progress", "fragmentInURL", "writeURL", "Overview", "onSlideClicked", "activate", "overview", "isActive", "cancelAutoSlide", "getBackgroundsElement", "margin", "slideSize", "getComputedSlideSize", "overviewSlideWidth", "overviewSlideHeight", "updateSlidesVisibility", "hslide", "vslide", "hbackground", "vbackground", "vmin", "innerWidth", "innerHeight", "transformSlides", "deactivate", "cueAutoSlide", "toggle", "override", "preventDefault", "Keyboard", "shortcuts", "bindings", "onDocumentKeyDown", "onDocumentKeyPress", "navigationMode", "unbind", "addKeyBinding", "binding", "callback", "keyCode", "description", "removeKeyBinding", "triggerKey", "registerKeyboardShortcut", "getShortcuts", "getBindings", "shiftKey", "charCode", "toggleHelp", "keyboardCondition", "isFocused", "autoSlideWasPaused", "isAutoSliding", "onUserInput", "activeElementIsCE", "activeElement", "isContentEditable", "activeElementIsInput", "activeElementIsNotes", "unusedModifier", "altKey", "ctrlKey", "metaKey", "resumeKeyCodes", "keyboard", "isPaused", "useLinearMode", "hasHorizontalSlides", "hasVerticalSlides", "triggered", "apply", "action", "skipFragments", "left", "right", "up", "Number", "MAX_VALUE", "down", "togglePause", "requestMethod", "documentElement", "requestFullscreen", "webkitRequestFullscreen", "webkitRequestFullScreen", "mozRequestFullScreen", "msRequestFullscreen", "embedded", "getViewportElement", "autoSlideStoppable", "toggleAutoSlide", "closeOverlay", "Location", "t", "writeURLTimeout", "replaceStateTimestamp", "onWindowHashChange", "getIndicesFromHash", "hash", "name", "bits", "hashIndexBase", "hashOneBasedIndex", "getElementById", "decodeURIComponent", "error", "readURL", "currentIndices", "newIndices", "history", "debouncedReplaceState", "pathname", "replaceState", "Date", "now", "replaceStateTimeout", "MAX_REPLACE_STATE_FREQUENCY", "s", "encodeURIComponent", "Controls", "onNavigateLeftClicked", "onNavigateRightClicked", "onNavigateUpClicked", "onNavigateDownClicked", "onNavigatePrevClicked", "onNavigateNextClicked", "revealElement", "controlsLeft", "controlsRight", "controlsUp", "controlsDown", "controlsPrev", "controlsNext", "controlsRightArrow", "controlsLeftArrow", "controlsDownArrow", "controlsLayout", "controlsBackArrows", "pointerEvents", "eventName", "routes", "fragmentsRoutes", "controlsTutorial", "hasNavigatedVertically", "hasNavigatedHorizontally", "Progress", "onProgressClicked", "bar", "getProgress", "getMaxWidth", "slides", "slidesTotal", "slideIndex", "floor", "clientX", "targetIndices", "Pointer", "lastMouseWheelStep", "cursorHidden", "cursorInactiveTimeout", "onDocumentCursorActive", "onDocumentMouseScroll", "mouseWheel", "hideInactiveCursor", "showCursor", "cursor", "hideCursor", "hideCursorTime", "wheelDelta", "loadScript", "script", "async", "defer", "onload", "onreadystatechange", "onerror", "err", "Error", "insertBefore", "lastChild", "Plugins", "reveal", "state", "registeredPlugins", "asyncDependencies", "plugins", "dependencies", "registerPlugin", "Promise", "resolve", "scripts", "scriptsToLoad", "condition", "scriptLoadedCallback", "initPlugins", "then", "console", "warn", "pluginValues", "values", "pluginsToInitialize", "loadAsync", "initNextPlugin", "afterPlugInitialized", "plugin", "init", "hasPlugin", "getPlugin", "getRegisteredPlugins", "Print", "injectPageNumbers", "pageWidth", "pageHeight", "body", "viewportElement", "presentationBackground", "viewportStyles", "layoutSlideContents", "slideScrollHeights", "scrollHeight", "pages", "pageContainer", "top", "contentHeight", "numberOfPages", "ceil", "pdfMaxPagesPerSlide", "page", "pdfPageHeightOffset", "showNotes", "notes", "getSlideNotes", "notesSpacing", "notesLayout", "notesElement", "bottom", "numberElement", "pdfSeparateFragments", "fragmentGroups", "previousFragmentStep", "clonedPage", "cloneNode", "fragmentNumber", "Touch", "touchStartX", "touchStartY", "touchStartCount", "touchCaptured", "onPointerDown", "onPointerMove", "onPointerUp", "onTouchStart", "onTouchMove", "onTouchEnd", "msPointerEnabled", "isSwipePrevented", "touches", "clientY", "currentX", "currentY", "includeFragments", "deltaX", "deltaY", "abs", "pointerType", "MSPOINTER_TYPE_TOUCH", "Focus", "onRevealPointerDown", "onDocumentPointerDown", "blur", "focus", "Notes", "print", "updateVisibility", "hasNotes", "isSpeakerNotesWindow", "notesElements", "Playback", "progressCheck", "diameter", "diameter2", "thickness", "playing", "progressOffset", "canvas", "context", "getContext", "setPlaying", "wasPlaying", "animate", "progressBefore", "radius", "iconSize", "endAngle", "PI", "startAngle", "save", "clearRect", "beginPath", "arc", "fillStyle", "fill", "lineWidth", "strokeStyle", "stroke", "fillRect", "moveTo", "lineTo", "restore", "on", "listener", "off", "minScale", "maxScale", "respondToHashChanges", "disableLayout", "touch", "loop", "shuffle", "help", "showHiddenSlides", "autoSlide", "autoSlideMethod", "defaultTiming", "previewLinks", "postMessageEvents", "focusBodyOnPageVisibilityChange", "transition", "transitionSpeed", "POSITIVE_INFINITY", "viewDistance", "mobileViewDistance", "indexh", "indexv", "previousSlide", "autoSlidePlayer", "ready", "navigationHistory", "slidesTransform", "dom", "autoSlideTimeout", "autoSlideStartTime", "autoSlidePaused", "backgrounds", "pointer", "initialize", "initOptions", "wrapper", "defaultConfig", "Util", "setViewport", "start", "viewport", "removeHiddenSlides", "setupDOM", "setupPostMessage", "setupScrollPrevention", "setupFullscreen", "resetVerticalSlides", "removeEventListeners", "setupPDF", "Device", "pauseOverlay", "statusElement", "createStatusElement", "position", "overflow", "clip", "text", "nodeType", "isAriaHidden", "isDisplayHidden", "child", "setInterval", "scrollTop", "scrollLeft", "onFullscreenChange", "onPostMessage", "isReady", "numberOfSlides", "setProperty", "resume", "enablePreviewLinks", "disablePreviewLinks", "onAutoSlidePlayerClick", "addEventListeners", "onWindowResize", "onSlidesClicked", "onTransitionEnd", "onPageVisibilityChange", "useCapture", "transforms", "createEvent", "initEvent", "dispatchPostMessage", "parent", "self", "message", "namespace", "getState", "JSON", "stringify", "onPreviewLinkClicked", "showPreview", "overlay", "showHelp", "html", "size", "oldScale", "presentationWidth", "presentationHeight", "zoom", "len", "remainingHeight", "nw", "naturalWidth", "videoWidth", "nh", "naturalHeight", "videoHeight", "es", "setPreviousVerticalIndex", "stack", "getPreviousVerticalIndex", "attributeName", "isLastVerticalSlide", "nextElementSibling", "isFirstSlide", "isLastSlide", "wasPaused", "resumeAutoSlide", "pauseAutoSlide", "origin", "defaultPrevented", "stateBefore", "indexhBefore", "indexvBefore", "updateSlides", "slideChanged", "currentHorizontalSlide", "currentVerticalSlides", "autoAnimateTransition", "getVerticalStacks", "stateLoop", "j", "splice", "syncSlide", "beforeSlide", "random", "slidesLength", "printMode", "loopedForwards", "loopedBackwards", "reverse", "showFragmentsIn", "hideFragmentsIn", "wasPresent", "slideState", "distanceX", "distanceY", "horizontalSlidesLength", "verticalSlidesLength", "oy", "fragmentRoutes", "pastCount", "mainLoop", "totalCount", "allFragments", "fragmentWeight", "isVertical", "SLIDES_SELECTOR", "HORIZONTAL_SLIDES_SELECTOR", "getSlidesAttributes", "attributes", "attribute", "getSlide", "indexf", "paused", "setState", "pausedFlag", "overviewFlag", "fragmentAutoSlide", "parentAutoSlide", "slideAutoSlide", "playbackRate", "navigateNext", "navigateLeft", "undefined", "navigateRight", "navigateUp", "navigateDown", "navigatePrev", "parse", "args", "anchor", "fullscreenElement", "webkitFullscreenElement", "stopImmediatePropagation", "currentTarget", "API", "VERSION", "syncFragments", "navigateFragment", "prevFragment", "nextFragment", "availableFragments", "toggleOverview", "isOverview", "loadSlide", "unloadSlide", "hidePreview", "getPreviousSlide", "getSlidePath", "getPlugins", "Deck", "enqueuedAPICalls", "deck"]
}
